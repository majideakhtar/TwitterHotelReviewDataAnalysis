/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ftppackage;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPClient;

/**
 *
 * @author comp
 */
public class FtpuploadFrame extends javax.swing.JFrame {

    String fileName="";
    public FtpuploadFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        filename = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Select File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(90, 320, 99, 35);
        getContentPane().add(filename);
        filename.setBounds(210, 320, 230, 40);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("FTP UPLOAD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(690, 330, 140, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Ftppackage/up.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setPreferredSize(new java.awt.Dimension(1000, 670));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1000, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try{
           JFileChooser chooser = new JFileChooser();
           chooser.setCurrentDirectory(new java.io.File("."));
           //chooser.addChoosableFileFilter(new ExtensionsFilter("only excel formats"), "png", "gif", "jpg", "jpeg", "bmp");
          FileFilter filter = new FileNameExtensionFilter("txt files only","txt");
           chooser.addChoosableFileFilter(filter);
           chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);           
           chooser.setAcceptAllFileFilterUsed(false);
           
           if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
               fileName = chooser.getSelectedFile().toString();
               System.out.println(fileName);  
               filename.setText(fileName);
            
           } 
           
       }catch(Exception e)
       {
           System.out.println(e);
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
    	try
    	{
    		FileInputStream fis=new FileInputStream(fileName);
    		byte bb[]=new byte[fis.available()];
    		fis.read(bb);
    		fis.close();
    		String fdata=new String(bb);
    		
    		FileOutputStream fos=new FileOutputStream("fTPUplaodCloud//CDataset.txt");
    		fos.write(fdata.getBytes());
    		fos.close();
    		Thread.sleep(2000);
    		
    		JOptionPane.showMessageDialog(null, "Offline Data uploaded Successfully.");
    		
    		
    		
    		
    	}catch(Exception e)
    	{
    		System.out.println(e);
    	}
    	
    	
//        String server = "files.000webhost.com";
//        int port = 21;
//        String user = "sentimentalanalysis";
//        String pass = "testing1234";
//        FTPClient ftpClient = new FTPClient();
//        try {
//            ftpClient.connect(server, port);
//            ftpClient.login(user, pass);
//            ftpClient.enterLocalPassiveMode();
// 
//            ftpClient.setFileType(FTP.BINARY_FILE_TYPE);
// 
//            // APPROACH #1: uploads first file using an InputStream
//            File firstLocalFile = new File(fileName);
// 
//            String firstRemoteFile = "fresh1.txt";
//            
//            //String localFile = "D:/test.txt";
//            //String remoteFile = "fresh.txt";
//            InputStream inputStream = new FileInputStream(firstLocalFile);
// 
//            System.out.println("Start uploading first file");
//            boolean done = ftpClient.storeFile(firstRemoteFile, inputStream);
//           ProgressBarExample m=new ProgressBarExample();    
//           // m.setVisible(true);    
//           //m.setFocusable(true);
//           //m.iterate();   
//
//         
//            System.out.println(done);            
//            inputStream.close();
//            JOptionPane.showMessageDialog(null, "done");
            
             
              
               
               
//           if (done) {
//             /*    
//              jProgressBar1.setValue(100);
//               */
//                System.out.println("The first file is uploaded successfully.");
//                JOptionPane.showMessageDialog(null, "file is uploaded successfully"+firstRemoteFile);
//            }
// 
//        } catch (Exception ex) {
//            System.out.println("Error: " + ex.getMessage());
//            ex.printStackTrace();
//        } finally {
//            try {
//                if (ftpClient.isConnected()) {
//                    ftpClient.logout();
//                    ftpClient.disconnect();
//                }
//            } catch (IOException ex) {
//                ex.printStackTrace();
//            }
 //       }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FtpuploadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FtpuploadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FtpuploadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FtpuploadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            FtpuploadFrame f1=    new FtpuploadFrame();
            f1.setVisible(true);
            f1.setSize(1000, 670);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField filename;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
